{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Message/Message.js","components/Section/Section.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","className","type","name","onClick","shortid","generate","Statistic","good","neutral","bad","total","percent","Notification","message","Section","title","children","Feedback","state","props","initialGood","initialNeutral","initialBad","countTotalFeedback","countPositivePercentage","Math","floor","e","target","setState","prevState","this","objectKey","Object","keys","Statistics","Component","defaultProps","initialTotal","initialPositivePercentage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA0CeA,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,UAAU,GAEVC,KAAK,SACLC,KAAMH,EACNI,QAASN,EALX,SAOGE,GALIK,IAAQC,kBCNRC,EAjBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,QAA9B,OAQhB,cAPA,CAOA,sBACE,oBAAGX,UAAU,GAAb,mBAAuBO,KACvB,oBAAGP,UAAU,GAAb,sBAA0BQ,KAC1B,oBAAGR,UAAU,GAAb,kBAAsBS,KACtB,oBAAGT,UAAU,GAAb,oBAAwBU,KACxB,oBAAGV,UAAU,GAAb,kCAAsCW,EAAtC,WCPWC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,oBAAIb,UAAU,GAAd,SAAkBa,OCYPC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIhB,UAAU,GAAd,SAAkBe,IACjBC,MCADC,E,4MAiBJC,MAAQ,CACNX,KAAM,EAAKY,MAAMC,YACjBZ,QAAS,EAAKW,MAAME,eACpBZ,IAAK,EAAKU,MAAMG,Y,EAuBlBC,mBAAqB,kBACnB,EAAKL,MAAMX,KAAO,EAAKW,MAAMT,IAAM,EAAKS,MAAMV,S,EAEhDgB,wBAA0B,WAExB,OADc,EAAKD,qBAEfE,KAAKC,MAAO,EAAKR,MAAMX,KAAO,EAAKgB,qBAAwB,KAC3D,G,EAGN1B,gBAAkB,SAAA8B,GAChB,IAAMzB,EAAOyB,EAAEC,OAAO1B,KACtB,EAAK2B,UAAS,SAAAC,GAAS,sBACpB5B,EAAO4B,EAAU5B,GAAQ,O,4CAI9B,WACE,MAA+B6B,KAAKb,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQqB,KAAKR,qBACbZ,EAAUoB,KAAKP,0BACfQ,EAAYC,OAAOC,KAAKH,KAAKb,OAEnC,OACE,qCAME,cAAC,EAAD,CAASH,MAAM,wBAAf,SACE,cAAC,EAAD,CACEnB,QAASoC,EACTnC,gBAAiBkC,KAAKlC,oBAGK,IAA9BkC,KAAKR,qBACJ,cAAC,EAAD,CAAcV,QAAQ,sBAEtB,cAAC,EAAD,CAASE,MAAM,aAAf,SACE,cAACoB,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,QAASA,a,GAxFAyB,aAAjBnB,EACGoB,aAAe,CACpBjB,YAAa,EACbC,eAAgB,EAChBC,WAAY,EACZgB,aAAc,EACdC,0BAA2B,GA2FhBtB,QC3FAuB,G,MARH,WACV,OACE,mCACE,cAAC,EAAD,Q,MCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4f52ac20.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\n// const FeedbackOptions = ({ onClickGood, onClickNeutral, onClickBad }) => (\r\n//   <div className=\"\">\r\n//     <h1 className=\"\">Please leave feedback</h1>\r\n//     <button type=\"button\" onClick={onClickGood} className=\"\">\r\n//       Good\r\n//     </button>\r\n//     <button type=\"button\" onClick={onClickNeutral} className=\"\">\r\n//       Neutral\r\n//     </button>\r\n//     <button type=\"button\" onClick={onClickBad} className=\"\">\r\n//       Bad\r\n//     </button>\r\n//   </div>\r\n// );\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          className=\"\"\r\n          key={shortid.generate()}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Statistic = ({ good, neutral, bad, total, percent }) => (\r\n  // <ul>\r\n  //   <li className=\"\">Good: {good}</li>\r\n  //   <li className=\"\">Neutral: {neutral}</li>\r\n  //   <li className=\"\">Bad: {bad}</li>\r\n  //   <li className=\"\">Total: {total}</li>\r\n  //   <li className=\"\">Positive percentage: {positivePercentage}%</li>\r\n  // </ul>\r\n  <>\r\n    <p className=\"\">Good: {good}</p>\r\n    <p className=\"\">Neutral: {neutral}</p>\r\n    <p className=\"\">Bad: {bad}</p>\r\n    <p className=\"\">Total: {total}</p>\r\n    <p className=\"\">Positive percentage: {percent}%</p>\r\n  </>\r\n);\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <h2 className=\"\">{message}</h2>\r\n  </>\r\n);\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"\">{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\nimport Notification from '../Message';\r\nimport Section from '../Section';\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = {\r\n    initialGood: 0,\r\n    initialNeutral: 0,\r\n    initialBad: 0,\r\n    initialTotal: 0,\r\n    initialPositivePercentage: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    percent: PropTypes.number,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.initialGood,\r\n    neutral: this.props.initialNeutral,\r\n    bad: this.props.initialBad,\r\n    // total: this.props.initialTotal,\r\n    // positivePercentage: this.props.initialPositivePercentage,\r\n  };\r\n\r\n  // onClickGood = () => {\r\n  //   this.setState(prevState => ({\r\n  //     good: prevState.good + 1,\r\n  //   }));\r\n  // };\r\n\r\n  // onClickNeutral = () => {\r\n  //   this.setState(prevState => ({\r\n  //     neutral: prevState.neutral + 1,\r\n  //   }));\r\n  // };\r\n\r\n  // onClickBad = () => {\r\n  //   this.setState(prevState => ({\r\n  //     bad: prevState.bad + 1,\r\n  //   }));\r\n  // };\r\n\r\n  countTotalFeedback = () =>\r\n    this.state.good + this.state.bad + this.state.neutral;\r\n\r\n  countPositivePercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    return total\r\n      ? Math.floor((this.state.good / this.countTotalFeedback()) * 100)\r\n      : 0;\r\n  };\r\n\r\n  onLeaveFeedback = e => {\r\n    const name = e.target.name;\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const percent = this.countPositivePercentage();\r\n    const objectKey = Object.keys(this.state);\r\n\r\n    return (\r\n      <>\r\n        {/* <FeedbackOptions\r\n          onClickGood={this.onClickGood}\r\n          onClickNeutral={this.onClickNeutral}\r\n          onClickBad={this.onClickBad}\r\n        /> */}\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={objectKey}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        {this.countTotalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              percent={percent}\r\n            />\r\n          </Section>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from 'react';\nimport Feedback from './components/Feedback';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}