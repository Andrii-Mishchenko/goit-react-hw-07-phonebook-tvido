{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["FeedbackOptions","onClickGood","onClickNeutral","onClickBad","className","type","onClick","Feedback","state","good","props","initialGood","neutral","initialNeutral","bad","initialBad","setState","prevState","countTotalFeedback","countPositivePercentage","Math","floor","this","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAWeA,EATU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,eAAgBC,EAA/B,EAA+BA,WAA/B,OACzB,sBAAKC,UAAU,gBAAf,UACU,oBAAIA,UAAU,GAAd,mCACA,wBAAQC,KAAK,SAASC,QAASL,EAAaG,UAAU,GAAtD,kBACA,wBAAQC,KAAK,SAASC,QAASJ,EAAgBE,UAAU,GAAzD,qBACA,wBAAQC,KAAK,SAASC,QAASH,EAAYC,UAAU,GAArD,qBCHJG,E,4MAeJC,MAAQ,CACNC,KAAM,EAAKC,MAAMC,YACjBC,QAAS,EAAKF,MAAMG,eACpBC,IAAK,EAAKJ,MAAMK,Y,EAKlBd,YAAc,WACZ,EAAKe,UAAS,SAAAC,GAAS,MAAK,CAC1BR,KAAMQ,EAAUR,KAAO,O,EAI3BP,eAAiB,WACf,EAAKc,UAAS,SAAAC,GAAS,MAAK,CAC1BL,QAASK,EAAUL,QAAU,O,EAIjCT,WAAa,WACX,EAAKa,UAAS,SAAAC,GAAS,MAAK,CAC1BH,IAAKG,EAAUH,IAAM,O,EAIzBI,mBAAqB,kBACnB,EAAKV,MAAMC,KAAO,EAAKD,MAAMM,IAAM,EAAKN,MAAMI,S,EAEhDO,wBAA0B,WAExB,OADc,EAAKD,qBAEfE,KAAKC,MAAO,EAAKb,MAAMC,KAAO,EAAKS,qBAAwB,KAC3D,G,4CAGN,WACE,MAA+BI,KAAKd,MAA5BC,EAAR,EAAQA,KAAMG,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CACEb,YAAaqB,KAAKrB,YAClBC,eAAgBoB,KAAKpB,eACrBC,WAAYmB,KAAKnB,aAKnB,sBAAKC,UAAU,oBAAf,UACE,oBAAIA,UAAU,GAAd,wBACA,uBAAMA,UAAU,GAAhB,mBAA0BK,KAC1B,uBAAML,UAAU,GAAhB,sBAA6BQ,KAC7B,uBAAMR,UAAU,GAAhB,kBAAyBU,KACzB,uBAAMV,UAAU,GAAhB,oBAA2BkB,KAAKJ,wBAChC,uBAAMd,UAAU,GAAhB,kCACwBkB,KAAKH,0BAD7B,iB,GAtEaI,aAAjBhB,EACGiB,aAAe,CACpBb,YAAa,EACbE,eAAgB,EAChBE,WAAY,GA2EDR,QCtEAkB,G,MARH,WACV,OACE,mCACE,cAAC,EAAD,Q,MCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8e1bb50d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FeedbackOptions  = ({onClickGood, onClickNeutral, onClickBad}) => (\r\n<div className=\"feedback__btn\">\r\n          <h1 className=\"\">Please leave feedback</h1>\r\n          <button type=\"button\" onClick={onClickGood} className=\"\">Good</button>\r\n          <button type=\"button\" onClick={onClickNeutral} className=\"\">Neutral</button>\r\n          <button type=\"button\" onClick={onClickBad} className=\"\">Bad</button>\r\n        </div>\r\n)\r\n\r\nexport default FeedbackOptions;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = {\r\n    initialGood: 0,\r\n    initialNeutral: 0,\r\n    initialBad: 0,\r\n    // initialTotal: 0,\r\n    // initialPositivePercentage: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.initialGood,\r\n    neutral: this.props.initialNeutral,\r\n    bad: this.props.initialBad,\r\n    // total: this.props.initialTotal,\r\n    // positivePercentage: this.props.initialPositivePercentage,\r\n  };\r\n\r\n  onClickGood = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n  };\r\n\r\n  onClickNeutral = () => {\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n  };\r\n\r\n  onClickBad = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () =>\r\n    this.state.good + this.state.bad + this.state.neutral;\r\n\r\n  countPositivePercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    return total\r\n      ? Math.floor((this.state.good / this.countTotalFeedback()) * 100)\r\n      : 0;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <FeedbackOptions\r\n          onClickGood={this.onClickGood}\r\n          onClickNeutral={this.onClickNeutral}\r\n          onClickBad={this.onClickBad}\r\n        />\r\n\r\n        {/* <Statistics good={} neutral={} bad={} total={} positivePercentage={}></Statistics> */}\r\n\r\n        <div className=\"statistic__result\">\r\n          <h1 className=\"\">Statistics</h1>\r\n          <span className=\"\">Good: {good}</span>\r\n          <span className=\"\">Neutral: {neutral}</span>\r\n          <span className=\"\">Bad: {bad}</span>\r\n          <span className=\"\">Total: {this.countTotalFeedback()}</span>\r\n          <span className=\"\">\r\n            Positive percentage: {this.countPositivePercentage()}%\r\n          </span>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from 'react';\nimport Feedback from './components/Feedback/Feedback';\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}